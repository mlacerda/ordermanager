<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
						http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
						http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
						http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">


	<!-- ============================================================================ -->
	<!-- =============== WEB SERVICES FRAMEWORK ===================================== -->
	<!-- ============================================================================ -->

	<!-- web-services-related configuration -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<bean id="wsServerInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
		<constructor-arg>
			<map>
				<entry key="action" value="UsernameToken" />
				<entry key="passwordType" value="PasswordDigest" />
				<entry key="user" value="user" />
				<entry key="passwordCallbackRef">
					<bean
						class="com.ciandt.arqref.framework.security.ws.CustomPasswordCallback" />
				</entry>
			</map>
		</constructor-arg>
	</bean>

	<jaxws:endpoint id="customerFacade" implementor="#customerFacadeImpl"
		address="/ws/customer">
		<jaxws:inInterceptors>
			<ref bean="wsServerInterceptor" />
		</jaxws:inInterceptors>
	</jaxws:endpoint>


	<bean id="wsClientInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
		<constructor-arg>
			<map>
				<entry key="action" value="UsernameToken" />
				<entry key="passwordType" value="PasswordDigest" />
				<entry key="user" value="user" />
				<entry key="passwordCallbackRef">
					<bean
						class="com.ciandt.arqref.framework.security.ws.CustomPasswordCallback" />
				</entry>
			</map>
		</constructor-arg>
	</bean>


	<jaxws:client id="customerFacadeClient"
		serviceClass="com.ciandt.arqref.ordermanager.facade.ws.CustomerFacade"
		address="http://${remote.url}:${remote.port}/ordermanager/services/ws/customer">
		<jaxws:outInterceptors>
			<ref bean="wsClientInterceptor" />
		</jaxws:outInterceptors>
	</jaxws:client>



	<!-- rest-services-related configuration -->
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
		<property name="supportUnwrapped" value="true" />
		<property name="ignoreNamespaces" value="true" />
	</bean>

	<jaxrs:server id="restContainer" address="/rs">
		<jaxrs:serviceBeans>
			<ref bean="productRestFacade" />
			<ref bean="customerRestFacade" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jsonProvider" />
		</jaxrs:providers>
		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>
	</jaxrs:server>

	<bean id="customerRestWebClient" class="org.apache.cxf.jaxrs.client.WebClient"
		factory-method="create">
		<constructor-arg type="java.lang.String"
			value="http://${remote.url}:${remote.port}/ordermanager/services/rs/customer" />
		<constructor-arg>
			<util:list>
				<ref bean="jsonProvider" />
			</util:list>
		</constructor-arg>
	</bean>
</beans>